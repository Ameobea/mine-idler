syntax = "proto3";

package mine;

// Unauthenticated service
service MinePublicService {
  // Auth
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc Register (RegisterRequest) returns (RegisterResponse);

  // Community
  rpc GetHiscores (GetHiscoresRequest) returns (GetHiscoresResponse);
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string session_token = 1;
}

message RegisterRequest {
  string username = 1;
  string password = 2;
}

message RegisterResponse {
  string session_token = 1;
}

message HiscoreEntry {
  string username = 1;
  float total_value = 2;
}

message GetHiscoresRequest {}

message GetHiscoresResponse {
  repeated HiscoreEntry hiscores = 1;
}

// Authenticated service
service MinePrivateService {
  // General
  rpc GetItemDescriptors (GetItemDescriptorsRequest) returns (GetItemDescriptorsResponse);
  rpc GetMineLocations (GetMineLocationsRequest) returns (GetMineLocationsResponse);

  // Account
  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse);
  rpc GetInventory (GetInventoryRequest) returns (GetInventoryResponse);
  rpc GetBase (GetBaseRequest) returns (GetBaseResponse);

  // Gameplay
  rpc StartMining (StartMiningRequest) returns (stream StartMiningResponse);
  rpc StopMining (StopMiningRequest) returns (StopMiningResponse);
  rpc UpgradeBase (UpgradeBaseRequest) returns (UpgradeBaseResponse);
}

message ItemDescriptor {
  uint32 id = 1;
  uint32 rarity_tier = 2;
  string name = 3;
  string display_name = 4;
  string description = 5;
  optional string image_url = 6;
}

message GetItemDescriptorsRequest {}

message GetItemDescriptorsResponse {
  repeated ItemDescriptor item_descriptors = 1;
}

message GetAccountRequest {}

message UserAccountInfo {
  int32 id = 1;
  string username = 2;
}

message GetAccountResponse {
  UserAccountInfo user_account_info = 1;
}

message StartMiningRequest {
  string location_name = 1;
}

message ItemModifier {}

message Item {
  int32 id = 1;
  float quality = 2;
  repeated ItemModifier modifiers = 3;
  float value = 4;
}

message StartMiningResponse {
  Item loot = 1;
}

message GetMineLocationsRequest {}

message MineLocationDescriptor {
  int32 id = 1;
  string name = 2;
  string display_name = 4;
  string description = 3;
}

message MineLocationRes {
  MineLocationDescriptor descriptor = 1;
  bool is_available = 2;
}

message GetMineLocationsResponse {
  repeated MineLocationRes mine_locations = 1;
}

enum SortBy {
  DateAcquired = 0;
  RarityTier = 1;
  Value = 2;
}

enum SortDirection {
  Ascending = 0;
  Descending = 1;
}

message GetInventoryRequest {
  uint32 page_size = 1;
  uint32 page_number = 2;
  SortBy sort_by = 3;
  SortDirection sort_direction = 4;
}

message ItemQualityHistogram {
  repeated uint32 buckets = 3;
}

message AggregatedItemCount {
  uint32 item_id = 1;
  uint32 total_count = 2;
  float total_quality = 3;
  float total_value = 4;
  ItemQualityHistogram quality_histogram = 5;
}

message AggregatedInventory {
  repeated AggregatedItemCount item_counts = 1;
}

message GetInventoryResponse {
  repeated Item items = 1;
  // total items in the full inventory, before any filtering or pagination
  uint32 total_items = 2;
  AggregatedInventory aggregated_inventory = 3;
}

message StopMiningRequest {}

message StopMiningResponse {}

message GetBaseRequest {}

message ItemCost {
  uint32 item_id = 1;
  float total_quality = 2;
}

message StorageUpgrades {
  uint32 storage_level = 1;
  uint32 storage_capacity = 2;
  repeated ItemCost upgrade_cost = 3;
}

message Upgrades {
  StorageUpgrades storage_upgrades = 1;
}

message GetBaseResponse {
  Upgrades upgrades = 1;
}

enum UpgradeType {
  Storage = 0;
}

message UpgradeBaseRequest {
  UpgradeType upgrade_type = 1;
}

message UpgradeBaseResponse {
  Upgrades upgrades = 1;
}
